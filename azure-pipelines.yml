
trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  displayName: dotnet sdk
  inputs:
    packageType: 'sdk'
    version: '5.0.x'
- task: UseDotNet@2
  inputs:
    packageType: 'runtime'
    version: '2.x'
- task: SonarCloudPrepare@1
  displayName: sonar prepare analysis
  inputs:
    SonarCloud: 'sonarcloud'
    organization: '2102-feb08-net'
    scannerMode: 'MSBuild'
    projectKey: '2102-feb08-net_Caleb_Project1'
    projectName: 'Caleb-Project1'
    extraProperties: 'sonar.cs.opencover.reportsPaths=$(Agent.TempDirectory)/*/coverage.opencover.xml'

- script: dotnet build --configuration $(buildConfiguration)
  displayName: dotnet build
  workingDirectory: Caleb-Project1
  
- task: DotNetCoreCLI@2
  displayName: dotnet test
  inputs:
    command: 'test'
    arguments: '--configuration $(buildConfiguration) --collect "xplat code coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura,opencover'
    workingDirectory: 'Caleb-Project1'
    
- task: SonarCloudAnalyze@1
  displayName: sonar run analysis

- task: SonarCloudPublish@1
  displayName: publish sonar quality gate
  inputs:
    pollingTimeoutSec: '300'

- task: PublishCodeCoverageResults@1
  displayName: publish code coverage report
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Agent.TempDirectory)/*/coverage.cobertura.xml'

- task: DotNetCoreCLI@2
  displayName: dotnet publish
  inputs:
    command: 'publish'
    publishWebProjects: true
    projects: 'Caleb-Project1/BestEats.Web'
    zipAfterPublish: true

- task: AzureRmWebAppDeployment@4
  displayName: app service deploy
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1(54aeee99-cfaf-4de7-9c10-a360891a5e01)'
    appType: 'webApp'
    WebAppName: 'BestEats'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
